//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Analyzer.NStar {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Analyzer.NStar.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на List&lt;bool&gt; и NList&lt;bool&gt; требуют для каждого элемента по 8 бит, в то время как тип bool имеет всего два значения: true и false, для чего достаточно одного бита. Для списков типа bool лучше использовать BitList..
        /// </summary>
        internal static string BitListDescription {
            get {
                return ResourceManager.GetString("BitListDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на List&lt;bool&gt; и NList&lt;bool&gt; требуют для каждого элемента по 8 бит, в то время как тип bool имеет всего два значения: true и false, для чего достаточно одного бита. Для списков типа bool лучше использовать BitList..
        /// </summary>
        internal static string BitListMessageFormat {
            get {
                return ResourceManager.GetString("BitListMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Применение типов.
        /// </summary>
        internal static string BitListTitle {
            get {
                return ResourceManager.GetString("BitListTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на List&lt;T&gt; генерирует мусор, который впустую расходует ресурсы и время сборки которого не определено. Для внутренних типов, не содержащих ссылок, лучше использовать NList&lt;T&gt;..
        /// </summary>
        internal static string NListDescription {
            get {
                return ResourceManager.GetString("NListDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на List&lt;{0}&gt; генерирует мусор, который впустую расходует ресурсы и время сборки которого не определено. Вместо этого лучше использовать NList&lt;{0}&gt;..
        /// </summary>
        internal static string NListMessageFormat {
            get {
                return ResourceManager.GetString("NListMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Применение типов.
        /// </summary>
        internal static string NListTitle {
            get {
                return ResourceManager.GetString("NListTitle", resourceCulture);
            }
        }
    }
}
